{"version":3,"sources":["webpack://@alter/flarum-ext-guest-posting/webpack/bootstrap","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['app']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['extend']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['components/SignUpModal']\"","webpack://@alter/flarum-ext-guest-posting/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['components/IndexPage']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['Component']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['components/Button']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['helpers/listItems']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['components/Badge']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['components/CommentPost']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['components/ReplyComposer']\"","webpack://@alter/flarum-ext-guest-posting/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@alter/flarum-ext-guest-posting/./src/forum/components/CreateAccountAlert.js","webpack://@alter/flarum-ext-guest-posting/./src/forum/addCreateAccountAlert.js","webpack://@alter/flarum-ext-guest-posting/./src/forum/index.js","webpack://@alter/flarum-ext-guest-posting/./src/forum/enableGuestPosting.js","webpack://@alter/flarum-ext-guest-posting/./src/forum/modifySignUpModal.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","CreateAccountAlert","view","app","translator","trans","count","forum","attribute","listItems","Button","component","className","onclick","modal","show","SignUpModal","Component","addAlertToContent","original","originalArgs","existing","additional","Array","isArray","unshift","initializers","add","override","IndexPage","DiscussionPage","DiscussionControls","goToLast","forceRefresh","session","user","this","canReply","composer","composingReplyTo","ReplyComposer","discussion","load","viewingDiscussion","isFullScreen","current","stream","goToNumber","deferred","resolve","promise","DiscussionComposer","extend","CommentPost","items","guestUsername","props","post","has","remove","charAt","toUpperCase","Badge","type","icon","label","importGuestContent","checked","onchange","disabled","loading","data"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/SignUpModal'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['components/IndexPage'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['components/ReplyComposer'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport SignUpModal from 'flarum/components/SignUpModal';\nimport listItems from 'flarum/helpers/listItems';\n\n/* global m */\n\nlet temporarilyHidden = false;\n\n/**\n * Renders similarly to Flarum's Alert, but with an additional .container inside\n */\nexport default class CreateAccountAlert extends Component {\n    view() {\n        return m('.Alert.Alert-info', m('.container', [\n            m('span.Alert-body', app.translator.trans('guest-posting.forum.alert.create-account', {\n                count: app.forum.attribute('guestPostCount'),\n            })),\n            m('ul.Alert-controls', listItems([\n                Button.component({\n                    className: 'Button Button--link',\n                    onclick: () => {\n                        app.modal.show(new SignUpModal);\n                    },\n                }, app.translator.trans('guest-posting.forum.alert.signup')),\n            ])),\n        ]));\n    }\n}\n","import {override} from 'flarum/extend';\nimport app from 'flarum/app';\nimport IndexPage from 'flarum/components/IndexPage';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\nimport CreateAccountAlert from './components/CreateAccountAlert';\n\n/* global m */\n\n// This single method will be used to inject the alert into existing components\n// If the view is already an array, we add our content at the start\n// If it isn't an array we wrap the content into a new array\n// Copied from fof/terms\nfunction addAlertToContent(original, ...originalArgs) {\n    const existing = original(...originalArgs);\n\n    if (!app.forum.attribute('guestPostCount')) {\n        return existing;\n    }\n\n    const additional = CreateAccountAlert.component();\n\n    if (Array.isArray(existing)) {\n        existing.unshift(additional);\n\n        return existing;\n    }\n\n    return m('div', [\n        additional,\n        existing,\n    ]);\n}\n\nexport default function () {\n    // We inject the banner on a few key pages\n    override(IndexPage.prototype, 'hero', addAlertToContent);\n    override(DiscussionPage.prototype, 'view', addAlertToContent);\n}\n","import app from 'flarum/app';\nimport addCreateAccountAlert from './addCreateAccountAlert';\nimport enableGuestPosting from './enableGuestPosting';\nimport modifySignUpModal from './modifySignUpModal';\n\napp.initializers.add('guest-posting', () => {\n    addCreateAccountAlert();\n    enableGuestPosting();\n    modifySignUpModal();\n});\n","import {extend, override} from 'flarum/extend';\nimport app from 'flarum/app';\nimport Badge from 'flarum/components/Badge';\nimport CommentPost from 'flarum/components/CommentPost';\nimport IndexPage from 'flarum/components/IndexPage';\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\nimport ReplyComposer from 'flarum/components/ReplyComposer';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\n\n/* global m */\n\nexport default function () {\n    override(DiscussionControls, 'replyAction', function (original, goToLast, forceRefresh) {\n        if (!app.session.user && this.canReply()) {\n            // Code copied from DiscussionControls.replyAction\n            let component = app.composer.component;\n            if (!app.composingReplyTo(this) || forceRefresh) {\n                component = new ReplyComposer({\n                    user: app.session.user,\n                    discussion: this,\n                });\n                app.composer.load(component);\n            }\n            app.composer.show();\n\n            if (goToLast && app.viewingDiscussion(this) && !app.composer.isFullScreen()) {\n                app.current.stream.goToNumber('reply');\n            }\n\n            const deferred = m.deferred();\n            deferred.resolve(component);\n            return deferred.promise;\n        }\n\n        return original(goToLast, forceRefresh);\n    });\n\n    override(IndexPage.prototype, 'newDiscussionAction', function (original) {\n        if (!app.session.user && app.forum.attribute('canStartDiscussion')) {\n            // Code copied from IndexPage.newDiscussionAction\n            const component = new DiscussionComposer({user: app.session.user});\n\n            app.composer.load(component);\n            app.composer.show();\n\n            const deferred = m.deferred();\n            deferred.resolve(component);\n            return deferred.promise;\n        }\n\n        return original();\n    });\n\n    extend(CommentPost.prototype, 'headerItems', function (items) {\n        const guestUsername = this.props.post.attribute('guest_username');\n\n        if (!guestUsername) {\n            return;\n        }\n\n        if (items.has('user')) {\n            items.remove('user');\n        }\n\n        items.add('guest-user', m('.PostUser', [\n            m('h3', [\n                m('span.Avatar.PostUser-avatar', guestUsername.charAt(0).toUpperCase()),\n                m('span.username', guestUsername),\n            ]),\n            m('ul.PostUser-badges badges', m('li', Badge.component({\n                type: 'guest',\n                icon: 'fas fa-user-secret',\n                label: app.translator.trans('guest-posting.forum.badge.guest'),\n            }))),\n        ]), 100);\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport SignUpModal from 'flarum/components/SignUpModal';\n\n/* global m */\n\nexport default function () {\n    extend(SignUpModal.prototype, 'init', function () {\n        this.importGuestContent = !!app.forum.attribute('guestPostCount');\n    });\n\n    extend(SignUpModal.prototype, 'fields', function (items) {\n        if (!app.forum.attribute('guestPostCount')) {\n            return;\n        }\n\n        items.add('guest-posting', m('.Form-group', m('div', m('label.checkbox', [\n            m('input', {\n                type: 'checkbox',\n                checked: this.importGuestContent,\n                onchange: () => {\n                    this.importGuestContent = !this.importGuestContent;\n                },\n                disabled: this.loading,\n            }),\n            app.translator.trans('guest-posting.forum.modal.import', {\n                count: app.forum.attribute('guestPostCount'),\n            }),\n        ]))));\n    });\n\n    extend(SignUpModal.prototype, 'submitData', function (data) {\n        if (this.importGuestContent) {\n            data.importGuestContent = this.importGuestContent;\n        }\n    });\n}\n"],"sourceRoot":""}